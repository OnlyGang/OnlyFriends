
@switch (@ViewData["Method"])
{
    case "New":
        {
            using (Html.BeginForm(actionName: "New", controllerName: "UserRelations", method: FormMethod.Post))
            {
                @Html.Hidden("User1Id", @ViewData["User1Id"])
                @Html.Hidden("User2Id", @ViewData["User2Id"])
                @Html.Hidden("Status", @ViewData["Status"]);
                <button type="submit" class='btn btn-success'> @ViewData["Type"] </button>
            }

            break;
        }
    case "Edit":
        {
            using (Html.BeginForm(actionName: "Edit", controllerName: "UserRelations", method: FormMethod.Post))
            {
                @Html.HttpMethodOverride(HttpVerbs.Put);
                @Html.Hidden("User1Id", @ViewData["User1Id"])
                @Html.Hidden("User2Id", @ViewData["User2Id"])
                @Html.Hidden("Status", @ViewData["Status"]);
                <button type="submit" class='btn btn-warning'> @ViewData["Type"] </button>
            }

            break;
        }
    case "Delete":
        {
            using (Html.BeginForm(actionName: "Delete", controllerName: "UserRelations", method: FormMethod.Post, routeValues: new { User1Id = ViewData["User1Id"], User2Id = ViewData["User2Id"]}))
            {
                @Html.HttpMethodOverride(HttpVerbs.Delete)
                <button type="submit" class='btn btn-danger'> @ViewData["Type"] </button>
            }
            break;
        }
}

